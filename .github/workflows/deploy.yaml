name: Full CD to UI Instance via SSH

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy to EC2 UI Instance
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          envs: OLLAMA_PRIVATE_IP
          script: |
            set -e

            # Export environment variables
            export OLLAMA_PRIVATE_IP="${{ secrets.OLLAMA_PRIVATE_IP }}"

            # Parse repo name from GITHUB_REPOSITORY
            REPO_NAME=$(basename "${{ github.repository }}")
            REPO_URL="https://github.com/${{ github.repository }}.git"
            APP_DIR="/home/ubuntu/${REPO_NAME}"

            echo "Repo name: $REPO_NAME"
            echo "Repo URL: $REPO_URL"
            echo "App directory: $APP_DIR"

            # Install nginx if not present
            if ! command -v nginx &> /dev/null; then
              echo "Installing nginx..."
              sudo apt-get update
              sudo apt-get install -y nginx
            fi

            # Configure nginx reverse proxy with variable expansion
            echo "Configuring nginx..."
            sudo bash -c "cat > /etc/nginx/sites-available/ollama-proxy << 'EOL'
            server {
                listen 11434;
                server_name _;

                location / {
                    if (\$request_method = OPTIONS) {
                        add_header 'Access-Control-Allow-Origin' '*' always;
                        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                        add_header 'Access-Control-Allow-Headers' '*' always;
                        add_header 'Access-Control-Max-Age' 1728000 always;
                        add_header 'Content-Type' 'text/plain charset=UTF-8' always;
                        add_header 'Content-Length' 0;
                        return 204;
                    }

                    proxy_pass http://${OLLAMA_PRIVATE_IP}:11434;
                    proxy_http_version 1.1;
                    proxy_set_header Upgrade \$http_upgrade;
                    proxy_set_header Connection 'upgrade';
                    proxy_set_header Host \$host;
                    proxy_cache_bypass \$http_upgrade;
                    
                    add_header 'Access-Control-Allow-Origin' '*' always;
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                    add_header 'Access-Control-Allow-Headers' '*' always;
                    add_header 'Access-Control-Expose-Headers' '*' always;
                }
            }
            EOL"

            # Enable the nginx site and test configuration
            sudo ln -sf /etc/nginx/sites-available/ollama-proxy /etc/nginx/sites-enabled/
            sudo rm -f /etc/nginx/sites-enabled/default
            
            # Test nginx configuration
            echo "Testing nginx configuration..."
            if ! sudo nginx -t; then
                echo "❌ Nginx configuration test failed!"
                sudo cat /etc/nginx/sites-available/ollama-proxy
                exit 1
            fi
            
            # Restart nginx
            echo "Restarting nginx..."
            sudo systemctl restart nginx
            
            # Verify nginx is running
            if ! systemctl is-active --quiet nginx; then
                echo "❌ Nginx failed to start!"
                sudo journalctl -u nginx --no-pager -n 50
                exit 1
            fi

            # Check for Node.js, install if not present
            if command -v node &> /dev/null; then
              echo "Node.js already installed: $(node --version)"
              echo "NPM version: $(npm --version)"
            else
              echo "Installing Node.js..."
              sudo apt-get update
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
              echo "Node.js installed: $(node --version)"
              echo "NPM version: $(npm --version)"
            fi

            # Clone repo if directory doesn't exist
            if [ ! -d "$APP_DIR" ]; then
              echo "Cloning repository..."
              cd /home/ubuntu
              git clone "$REPO_URL"
            fi

            # Navigate to app directory and update
            echo "Changing to directory: $APP_DIR"
            cd "$APP_DIR"

            echo "Resetting and pulling latest code..."
            git reset --hard
            git pull origin main

            echo "Writing .env with OLLAMA backend..."
            # Update to use localhost since we're using nginx reverse proxy
            echo "VITE_OLLAMA_BACKEND_URL=http://localhost:11434" > .env

            echo "Installing dependencies..."
            npm install

            echo "Building frontend..."
            npm run build

            echo "Restarting frontend server..."
            pkill -f "serve" || true
            sleep 2  # Wait for the process to fully terminate
            mkdir -p logs
            
            # Start the server with proper error handling
            echo "Starting frontend server..."
            if ! NODE_ENV=production npx serve -s dist -l 8666 >> logs/serve.log 2>&1 & then
                echo "❌ Failed to start the server!"
                cat logs/serve.log
                exit 1
            fi
            
            # Wait for server to start and verify
            echo "Waiting for server to start..."
            sleep 5
            
            # Verify the server is running
            if ! pgrep -f "serve -s dist" > /dev/null; then
                echo "❌ Server failed to start! Check logs/serve.log for details"
                cat logs/serve.log
                exit 1
            fi

            # Check if the port is actually being listened to
            if ! netstat -tulpn 2>/dev/null | grep ":8666" > /dev/null; then
                echo "❌ Server is not listening on port 8666! Check logs/serve.log for details"
                cat logs/serve.log
                exit 1
            fi

            # Test the nginx proxy
            echo "Testing nginx proxy..."
            curl -v http://localhost:11434/api/tags || {
                echo "❌ Failed to connect to Ollama through nginx proxy"
                sudo journalctl -u nginx --no-pager -n 50
                exit 1
            }

            echo "✅ Deployment completed successfully!"
            echo "Frontend URL: http://localhost:8666"
            echo "API URL: http://localhost:11434"
